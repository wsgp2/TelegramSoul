#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –±–æ—Ç–æ–≤ –≤ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Telegram.
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏—â–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —á–∞—Ç—ã —Å –±–æ—Ç–∞–º–∏.
"""

import os
import json
import re
from pathlib import Path
import argparse
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

def is_bot_by_username(username):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ username –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –±–æ—Ç–æ–º –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É"""
    if not username:
        return False
        
    # –¢–∏–ø–∏—á–Ω—ã–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–ª—è –∏–º–µ–Ω –±–æ—Ç–æ–≤
    bot_patterns = [
        r'[_]?bot$',
        r'Bot$',
        r'[_]?robot$',
        r'_official$',
        r'assistant$'
    ]
    
    for pattern in bot_patterns:
        if re.search(pattern, username):
            return True
    
    return False

def analyze_messages_dir(base_dir, fix_mode=False):
    """
    –ê–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤
    
    Args:
        base_dir (str): –ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
        fix_mode (bool): –ï—Å–ª–∏ True, —É–¥–∞–ª—è–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –æ—Ç –±–æ—Ç–æ–≤
    """
    base_path = Path(base_dir)
    
    if not base_path.exists():
        logger.error(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {base_dir} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_dirs = 0
    potential_bot_dirs = 0
    empty_message_dirs = 0
    removed_dirs = 0
    
    # –ò—â–µ–º –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    user_dirs = [d for d in base_path.iterdir() if d.is_dir() and d.name.startswith('user_')]
    total_dirs = len(user_dirs)
    
    logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {total_dirs} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π")
    
    potential_bots = []
    
    for user_dir in user_dirs:
        user_id = user_dir.name.replace('user_', '')
        msg_file = user_dir / 'messages.json'
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        if not msg_file.exists():
            logger.warning(f"‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {user_dir} –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª–∞ messages.json")
            empty_message_dirs += 1
            continue
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
            with open(msg_file, 'r', encoding='utf-8') as f:
                messages = json.load(f)
            
            if not messages:
                logger.warning(f"‚ö†Ô∏è –§–∞–π–ª {msg_file} —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π")
                empty_message_dirs += 1
                continue
                
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –±–æ—Ç–∞
            bot_score = 0
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –¥–ª—è –±–æ—Ç–æ–≤
            for msg in messages:
                if not msg.get('message'):
                    continue
                
                message_text = msg.get('message', '')
                
                # –•–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ –¥–ª—è –±–æ—Ç–æ–≤ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
                if re.search(r'(Welcome|–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å|–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É|–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É|–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É)', message_text):
                    bot_score += 1
                    
                if re.search(r'(/start|/help|/settings|/menu)', message_text):
                    bot_score += 1
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ç–∏–ø–∏—á–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –æ—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–æ–≤
                if re.search(r'(–î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É|I can help you with|I am a bot)', message_text):
                    bot_score += 2
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∏–∑–Ω–∞–∫–∏ –±–æ—Ç–∞
            if bot_score >= 3:
                bot_info = {
                    'id': user_id,
                    'dir': str(user_dir),
                    'message_count': len(messages),
                    'bot_score': bot_score
                }
                potential_bots.append(bot_info)
                potential_bot_dirs += 1
                
                logger.warning(f"ü§ñ –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç: {user_dir} (score: {bot_score})")
                
                # –í —Ä–µ–∂–∏–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –±–æ—Ç–æ–º
                if fix_mode:
                    import shutil
                    shutil.rmtree(user_dir)
                    logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –±–æ—Ç–æ–º: {user_dir}")
                    removed_dirs += 1
                    
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {msg_file}: {e}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –±–æ—Ç–∞—Ö
    if potential_bots:
        with open('potential_bots.json', 'w', encoding='utf-8') as f:
            json.dump(potential_bots, f, ensure_ascii=False, indent=2)
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    logger.info("\n============= –ò–¢–û–ì–ò –ê–ù–ê–õ–ò–ó–ê =============")
    logger.info(f"üìÅ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π: {total_dirs}")
    logger.info(f"ü§ñ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –±–æ—Ç–æ–≤: {potential_bot_dirs}")
    logger.info(f"üì≠ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–π: {empty_message_dirs}")
    
    if fix_mode:
        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –±–æ—Ç–∞–º–∏: {removed_dirs}")
    
    return potential_bots

def main():
    parser = argparse.ArgumentParser(description="–ê–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–æ—Ç–æ–≤")
    parser.add_argument('--dir', type=str, default='data/messages', help='–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏')
    parser.add_argument('--fix', action='store_true', help='–£–¥–∞–ª—è—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –±–æ—Ç–∞–º–∏')
    
    args = parser.parse_args()
    
    logger.info(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {args.dir}")
    logger.info(f"üîß –†–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {'–í–∫–ª—é—á–µ–Ω' if args.fix else '–í—ã–∫–ª—é—á–µ–Ω'}")
    
    analyze_messages_dir(args.dir, args.fix)

if __name__ == "__main__":
    main()
