#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ—Å–ª–µ –æ–±—Ä—ã–≤–∞
"""
import asyncio
import os
import json

def check_and_resume():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ checkpoint'–æ–≤ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"""
    
    checkpoints_dir = "data/reports"
    checkpoints = []
    
    # –ò—â–µ–º checkpoint —Ñ–∞–π–ª—ã
    if os.path.exists(checkpoints_dir):
        for file in os.listdir(checkpoints_dir):
            if file.endswith("_checkpoint.json"):
                checkpoint_path = os.path.join(checkpoints_dir, file)
                try:
                    with open(checkpoint_path, 'r', encoding='utf-8') as f:
                        data = json.load(f)
                    checkpoints.append({
                        'file': file,
                        'path': checkpoint_path,
                        'data': data
                    })
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è checkpoint {file}: {e}")
    
    if not checkpoints:
        print("üü¢ Checkpoint'—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑...")
        os.system("python run_analysis.py")
        return
    
    print("üîç –ù–∞–π–¥–µ–Ω—ã –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑—ã:")
    for i, cp in enumerate(checkpoints):
        data = cp['data']
        progress = (data.get('last_processed_chunk', 0) + 1) / data.get('total_chunks', 1) * 100
        print(f"  {i+1}. {cp['file']}")
        print(f"     üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {progress:.1f}% ({data.get('last_processed_chunk', 0) + 1}/{data.get('total_chunks', 0)} —á–∞—Å—Ç–µ–π)")
        print(f"     ‚è∞ –í—Ä–µ–º—è: {data.get('timestamp', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print()
    
    choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑\n2. –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ\n3. –¢–æ–ª—å–∫–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –æ—Ü–µ–Ω–∫—É\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
    
    if choice == "1":
        print("üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑...")
        os.system("python run_analysis.py")
    elif choice == "2":
        print("üóëÔ∏è –£–¥–∞–ª—è–µ–º checkpoint'—ã –∏ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–Ω–æ–≤–æ...")
        for cp in checkpoints:
            os.remove(cp['path'])
        os.system("python run_analysis.py")
    elif choice == "3":
        print("üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –æ—Ü–µ–Ω–∫—É...")
        os.system("python fix_commercial.py")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")

if __name__ == "__main__":
    check_and_resume() 