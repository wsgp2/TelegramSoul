#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
"""

import asyncio
import json
from chatgpt_analyzer import ChatGPTAnalyzer

async def test_new_percentage_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É —á–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤"""
    
    print("üîç –¢–ï–°–¢–ò–†–£–ï–ú –ù–û–í–£–Æ –°–ò–°–¢–ï–ú–£ –ü–†–û–¶–ï–ù–¢–û–í –ò –ê–ì–†–ï–ì–ê–¶–ò–ò")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = ChatGPTAnalyzer()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - —Ç–µ–º—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏
    test_topics = [
        {
            "name": "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –±–ª–æ–∫—á–µ–π–Ω",
            "keywords": ["–±–∏—Ç–∫–æ–∏–Ω", "ethereum", "—Ç—Ä–µ–π–¥–∏–Ω–≥"],
            "percentage": 25.5,
            "sentiment": "positive",
            "description": "–ê–∫—Ç–∏–≤–Ω–æ–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç"
        },
        {
            "name": "–ö—Ä–∏–ø—Ç–æ–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
            "keywords": ["–±–∏—Ç–∫–æ–∏–Ω", "–∞–ª—å—Ç–∫–æ–∏–Ω—ã", "–ø–æ—Ä—Ç—Ñ–µ–ª—å"],
            "percentage": 15.2,
            "sentiment": "neutral",
            "description": "–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫—Ä–∏–ø—Ç–æ"
        },
        {
            "name": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
            "keywords": ["–æ—Ç–ø—É—Å–∫", "–±–∏–ª–µ—Ç—ã", "–æ—Ç–µ–ª–∏"],
            "percentage": 8.3,
            "sentiment": "positive",
            "description": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫"
        },
        {
            "name": "–†–∞–±–æ—Ç–∞ –∏ –∫–∞—Ä—å–µ—Ä–∞",
            "keywords": ["–ø—Ä–æ–µ–∫—Ç", "–¥–µ–¥–ª–∞–π–Ω", "–∑–∞—Ä–ø–ª–∞—Ç–∞"],
            "percentage": 12.7,
            "sentiment": "neutral",
            "description": "–†–∞–±–æ—á–∏–µ –≤–æ–ø—Ä–æ—Å—ã"
        },
        {
            "name": "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç",
            "keywords": ["—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "–¥–∏–µ—Ç–∞", "–≤—Ä–∞—á"],
            "percentage": 6.1,
            "sentiment": "positive",
            "description": "–ó–∞–±–æ—Ç–∞ –æ –∑–¥–æ—Ä–æ–≤—å–µ"
        }
    ]
    
    print("üìä –ò–°–•–û–î–ù–´–ï –¢–ï–ú–´:")
    total_original = sum(t['percentage'] for t in test_topics)
    for topic in test_topics:
        print(f"  ‚Ä¢ {topic['name']}: {topic['percentage']}%")
    print(f"üìà –û–±—â–∞—è —Å—É–º–º–∞: {total_original}%")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –∞–≥—Ä–µ–≥–∞—Ü–∏—é
    print("üîÑ –¢–ï–°–¢–ò–†–£–ï–ú –ù–û–í–£–Æ –ê–ì–†–ï–ì–ê–¶–ò–Æ:")
    aggregated = analyzer._aggregate_similar_topics(test_topics)
    
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ ({len(aggregated)} —Ç–µ–º):")
    total_aggregated = sum(t['percentage'] for t in aggregated)
    
    for i, topic in enumerate(aggregated, 1):
        merged_info = f" (–æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ {topic['merged_from']})" if topic.get('merged_from', 0) > 1 else ""
        print(f"  {i}. {topic['name']}: {topic['percentage']}%{merged_info}")
    print(f"üìà –û–±—â–∞—è —Å—É–º–º–∞ –ø–æ—Å–ª–µ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏: {total_aggregated}%")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    print("üéØ –¢–ï–°–¢–ò–†–£–ï–ú –ù–û–†–ú–ê–õ–ò–ó–ê–¶–ò–Æ –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í:")
    
    # –°–ª—É—á–∞–π 1: –°—É–º–º–∞ –¥–∞–ª–µ–∫–∞ –æ—Ç 100%
    low_percentage_topics = [
        {"name": "–¢–µ–º–∞ 1", "percentage": 5.2},
        {"name": "–¢–µ–º–∞ 2", "percentage": 3.1},
        {"name": "–¢–µ–º–∞ 3", "percentage": 2.8}
    ]
    
    print("üìâ –°–ª—É—á–∞–π 1: –ù–∏–∑–∫–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (–æ–±—â–∞—è —Å—É–º–º–∞ –¥–∞–ª–µ–∫–∞ –æ—Ç 100%)")
    total_low = sum(t['percentage'] for t in low_percentage_topics)
    print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è —Å—É–º–º–∞: {total_low}%")
    
    normalized_low = analyzer.normalize_percentages_for_client(low_percentage_topics)
    for topic in normalized_low:
        if topic['normalized']:
            print(f"   ‚Ä¢ {topic['name']}: {topic['original_percentage']}% ‚Üí {topic['percentage']}% (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")
        else:
            print(f"   ‚Ä¢ {topic['name']}: {topic['percentage']}% (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)")
    print()
    
    # –°–ª—É—á–∞–π 2: –°—É–º–º–∞ –±–ª–∏–∑–∫–∞ –∫ 100%
    normal_topics = [
        {"name": "–¢–µ–º–∞ A", "percentage": 45.2},
        {"name": "–¢–µ–º–∞ B", "percentage": 30.1},
        {"name": "–¢–µ–º–∞ C", "percentage": 20.7}
    ]
    
    print("üìä –°–ª—É—á–∞–π 2: –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (—Å—É–º–º–∞ –±–ª–∏–∑–∫–∞ –∫ 100%)")
    total_normal = sum(t['percentage'] for t in normal_topics)
    print(f"   –ò—Å—Ö–æ–¥–Ω–∞—è —Å—É–º–º–∞: {total_normal}%")
    
    normalized_normal = analyzer.normalize_percentages_for_client(normal_topics)
    for topic in normalized_normal:
        if topic['normalized']:
            print(f"   ‚Ä¢ {topic['name']}: {topic['original_percentage']}% ‚Üí {topic['percentage']}% (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")
        else:
            print(f"   ‚Ä¢ {topic['name']}: {topic['percentage']}% (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)")
    print()
    
    print("‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print()
    print("üéØ –í–´–í–û–î–´:")
    print("1. –ê–≥—Ä–µ–≥–∞—Ü–∏—è —Ç–µ–ø–µ—Ä—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è - –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Ç–µ–º–∞–º")
    print("2. –ü—Ä–æ—Ü–µ–Ω—Ç—ã —á–µ—Å—Ç–Ω—ã–µ - –æ—Ç—Ä–∞–∂–∞—é—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("3. –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏")
    print("4. –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ª—é–±—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–µ —Ç–æ–ª—å–∫–æ –∫—Ä–∏–ø—Ç–æ-—ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤")

if __name__ == "__main__":
    asyncio.run(test_new_percentage_system()) 