#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ü–µ–Ω–∫–∏
"""

from chatgpt_analyzer import ChatGPTAnalyzer
import os

def test_commercial_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∫–æ–º–º–µ—Ä—á–µ—Å–∫—É—é –æ—Ü–µ–Ω–∫—É"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–º
    test_topics_data = {
        "topics": [
            {
                "name": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∂–∏–ª—å–µ",
                "keywords": ["–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–∂–∏–ª—å–µ"],
                "percentage": 25.0,
                "sentiment": "positive",
                "description": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–ª–∞–Ω–æ–≤ –ø–µ—Ä–µ–µ–∑–¥–∞"
            },
            {
                "name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã",
                "keywords": ["—Ñ–∏–Ω–∞–Ω—Å—ã", "–∫—Ä–µ–¥–∏—Ç—ã"],
                "percentage": 20.0,
                "sentiment": "negative",
                "description": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏"
            }
        ]
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ü–µ–Ω–∫–∏ –≤ –ù–û–í–û–ú —Ñ–æ—Ä–º–∞—Ç–µ (–∫–∞–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç GPT-4o)
    test_commercial_assessment = {
        "commercial_assessment": [
            {
                "topic_name": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∂–∏–ª—å–µ",
                "commercial_potential": "medium",
                "realistic_revenue": "15,000-30,000 —Ä—É–±/–º–µ—Å",
                "monetization_methods": [
                    {
                        "method": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ–µ–∑–¥—É",
                        "description": "–ü–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –∂–∏–ª—å—è",
                        "target_audience": "–ú–∏–≥—Ä–∞–Ω—Ç—ã",
                        "startup_cost": "0-5,000 —Ä—É–±",
                        "time_to_profit": "1-2 –º–µ—Å—è—Ü–∞",
                        "success_probability": "70%",
                        "first_steps": ["–°–æ–∑–¥–∞—Ç—å —Å–∞–π—Ç", "–ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤"]
                    }
                ],
                "why_this_person": "–ê–∫—Ç–∏–≤–Ω–æ –æ–±—Å—É–∂–¥–∞–µ—Ç –ø–µ—Ä–µ–µ–∑–¥"
            },
            {
                "topic_name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã",
                "commercial_potential": "high",
                "realistic_revenue": "50,000-100,000 —Ä—É–±/–º–µ—Å",
                "monetization_methods": [
                    {
                        "method": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
                        "description": "–ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º",
                        "target_audience": "–õ—é–¥–∏ —Å –¥–æ–ª–≥–∞–º–∏",
                        "startup_cost": "10,000-20,000 —Ä—É–±",
                        "time_to_profit": "2-3 –º–µ—Å—è—Ü–∞",
                        "success_probability": "60%",
                        "first_steps": ["–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é", "–°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"]
                    }
                ],
                "why_this_person": "–ü–æ–Ω–∏–º–∞–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"
            }
        ]
    }
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    try:
        analyzer = ChatGPTAnalyzer(api_key="test_key")
    except:
        analyzer = ChatGPTAnalyzer.__new__(ChatGPTAnalyzer)
        analyzer.output_dir = "data/reports"
        os.makedirs(analyzer.output_dir, exist_ok=True)
    
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –ö–û–ú–ú–ï–†–ß–ï–°–ö–û–ô –û–¶–ï–ù–ö–ò")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
    beautiful_report = analyzer.generate_beautiful_client_report(
        test_topics_data, 
        test_commercial_assessment, 
        "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞)"
    )
    
    print(beautiful_report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    report_path = os.path.join(analyzer.output_dir, "–¢–ï–°–¢_–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è_–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è_–æ—Ü–µ–Ω–∫–∞.md")
    with open(report_path, 'w', encoding='utf-8') as f:
        f.write(beautiful_report)
    
    print(f"\nüíæ –û—Ç—á–µ—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ü–µ–Ω–∫–æ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_path}")
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_commercial_fix() 