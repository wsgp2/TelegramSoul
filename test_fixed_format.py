#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –∫—Ä–∞—Å–∏–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ
"""

from chatgpt_analyzer import ChatGPTAnalyzer
import os

def test_fixed_format():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫—Ä–∞—Å–∏–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏ (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
    test_topics_data = {
        "topics": [
            {
                "name": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∂–∏–ª—å–µ",
                "keywords": ["–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–∂–∏–ª—å–µ", "–ø–µ—Ä–µ–µ–∑–¥"],
                "percentage": 489.0,  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç > 100%
                "sentiment": "positive",
                "description": "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç —Å–≤–æ–∏ –ø–ª–∞–Ω—ã –ø–æ –ø–µ—Ä–µ–µ–∑–¥—É –∏ –≤—ã–±–æ—Ä—É –∂–∏–ª—å—è"
            },
            {
                "name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã", 
                "keywords": ["—Ñ–∏–Ω–∞–Ω—Å—ã", "–∫—Ä–µ–¥–∏—Ç—ã", "–∏–ø–æ—Ç–µ–∫–∞"],
                "percentage": 362.0,  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç > 100%
                "sentiment": "negative",
                "description": "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫—Ä–µ–¥–∏—Ç–∞–º–∏"
            },
            {
                "name": "–ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
                "keywords": ["–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "–ø–∏—Ä–∞–º–∏–¥—ã"],
                "percentage": 355.5,  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç > 100%
                "sentiment": "neutral",
                "description": "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ö–µ–º—ã"
            },
            {
                "name": "–õ–∏—á–Ω–æ—Å—Ç–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ",
                "keywords": ["—Ä–∞–∑–≤–∏—Ç–∏–µ", "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞", "–ø—Ä–∏–≤—ã—á–∫–∏"],
                "percentage": 336.0,  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç > 100%
                "sentiment": "positive",
                "description": "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –≤–∞–∂–Ω–æ—Å—Ç—å –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã"
            },
            {
                "name": "–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
                "keywords": ["–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã", "–±–∏—Ç–∫–æ–∏–Ω", "—Ç–æ—Ä–≥–æ–≤–ª—è"],
                "percentage": 311.3,  # –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç > 100%
                "sentiment": "neutral",
                "description": "–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—Å—É–∂–¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã"
            }
        ]
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–π –æ—Ü–µ–Ω–∫–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Ç–µ–º
    test_commercial_assessment = {
        "commercial_assessment": [
            {
                "topic": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –∂–∏–ª—å–µ",
                "commercial_score": "–°—Ä–µ–¥–Ω–∏–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª",
                "products": [
                    {
                        "name": "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ–µ–∑–¥—É",
                        "description": "–ü–æ–º–æ—â—å –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø–µ—Ä–µ–µ–∑–¥–∞",
                        "revenue_potential": "—Å—Ä–µ–¥–Ω–∏–π"
                    }
                ]
            },
            {
                "topic": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∫—Ä–µ–¥–∏—Ç—ã",
                "commercial_score": "–í—ã—Å–æ–∫–∏–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª",
                "products": [
                    {
                        "name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏",
                        "description": "–ü–æ–º–æ—â—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º",
                        "revenue_potential": "–≤—ã—Å–æ–∫–∏–π"
                    }
                ]
            }
        ]
    }
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    try:
        analyzer = ChatGPTAnalyzer(api_key="test_key")
    except:
        analyzer = ChatGPTAnalyzer.__new__(ChatGPTAnalyzer)
        analyzer.output_dir = "data/reports"
        os.makedirs(analyzer.output_dir, exist_ok=True)
    
    print("üîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –í –ö–†–ê–°–ò–í–û–ú –§–û–†–ú–ê–¢–ï")
    print("=" * 60)
    
    print(f"\nüìä –ò–°–•–û–î–ù–´–ï –ü–†–û–ë–õ–ï–ú–ù–´–ï –î–ê–ù–ù–´–ï:")
    total_raw = sum(t['percentage'] for t in test_topics_data['topics'])
    print(f"üìà –°—É–º–º–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤: {total_raw:.1f}% (–ø—Ä–æ–±–ª–µ–º–∞!)")
    for topic in test_topics_data['topics']:
        print(f"   ‚Ä¢ {topic['name']}: {topic['percentage']:.1f}%")
    
    print("\n" + "="*60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫—Ä–∞—Å–∏–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–º
    print("\nüíé –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ö–†–ê–°–ò–í–´–ô –§–û–†–ú–ê–¢:")
    print("-" * 40)
    beautiful_topics = analyzer.generate_beautiful_topic_format(test_topics_data)
    print(beautiful_topics)
    
    print("\n" + "=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\nüìä –ü–û–õ–ù–´–ô –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–¢–ß–ï–¢:")
    print("-" * 40)
    beautiful_report = analyzer.generate_beautiful_client_report(
        test_topics_data, 
        test_commercial_assessment, 
        "–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª–∏–µ–Ω—Ç (–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)"
    )
    print(beautiful_report)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç
    report_path = os.path.join(analyzer.output_dir, "–¢–ï–°–¢_–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π_–æ—Ç—á–µ—Ç.md")
    with open(report_path, 'w', encoding='utf-8') as f:
        f.write(beautiful_report)
    
    print(f"\nüíæ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_path}")
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_fixed_format() 