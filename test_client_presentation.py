#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
"""

# –î–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞ (—Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ)
analysis_results = {
    "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –±–∏–∑–Ω–µ—Å": {
        "total_percentage": 268.0,
        "parts_found": 12,
        "average_percentage": 22.3
    },
    "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Ç—É—Ä–∏–∑–º": {
        "total_percentage": 117.9,
        "parts_found": 5,
        "average_percentage": 23.6
    },
    "–õ–∏—á–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ": {
        "total_percentage": 71.0,
        "parts_found": 4,
        "average_percentage": 17.8
    },
    "–°–æ–±—ã—Ç–∏—è –∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è": {
        "total_percentage": 56.0,
        "parts_found": 4,
        "average_percentage": 14.0
    },
    "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏": {
        "total_percentage": 45.0,
        "parts_found": 3,
        "average_percentage": 15.0
    },
    "–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è": {
        "total_percentage": 37.6,
        "parts_found": 2,
        "average_percentage": 18.8
    },
    "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ": {
        "total_percentage": 5.0,
        "parts_found": 1,
        "average_percentage": 5.0
    }
}

def version_1_frequency_mentions():
    """–í–∞—Ä–∏–∞–Ω—Ç 1: –ß–∞—Å—Ç–æ—Ç–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π + –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å"""
    print("üìä –í–ê–†–ò–ê–ù–¢ 1: –ß–ê–°–¢–û–¢–ê + –ò–ù–¢–ï–ù–°–ò–í–ù–û–°–¢–¨")
    print("=" * 50)
    
    sorted_topics = sorted(analysis_results.items(), key=lambda x: x[1]["total_percentage"], reverse=True)
    
    for topic, data in sorted_topics:
        frequency = data["parts_found"]
        intensity = data["average_percentage"]
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —á–∞—Å—Ç–æ—Ç—ã
        if frequency >= 10:
            freq_emoji = "üî•üî•üî•"
        elif frequency >= 5:
            freq_emoji = "üî•üî•"
        elif frequency >= 3:
            freq_emoji = "üî•"
        else:
            freq_emoji = "üí´"
            
        # –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏  
        if intensity >= 20:
            intensity_emoji = "‚ö°‚ö°‚ö°"
        elif intensity >= 15:
            intensity_emoji = "‚ö°‚ö°"
        elif intensity >= 10:
            intensity_emoji = "‚ö°"
        else:
            intensity_emoji = "üí°"
        
        print(f"üéØ {topic}")
        print(f"   {freq_emoji} –ß–∞—Å—Ç–æ—Ç–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–π: {frequency} —Ä–∞–∑")
        print(f"   {intensity_emoji} –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {intensity:.1f}% –∑–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ")
        print()

def version_2_time_investment():
    """–í–∞—Ä–∏–∞–Ω—Ç 2: –í–ª–æ–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏"""
    print("‚è∞ –í–ê–†–ò–ê–ù–¢ 2: –í–†–ï–ú–Ø, –£–î–ï–õ–Ø–ï–ú–û–ï –¢–ï–ú–ê–ú")
    print("=" * 50)
    
    sorted_topics = sorted(analysis_results.items(), key=lambda x: x[1]["total_percentage"], reverse=True)
    
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–ª—è –ø–æ–Ω—è—Ç–Ω–æ—Å—Ç–∏ (–ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º —á—Ç–æ –æ–±—â–µ–µ –≤—Ä–µ–º—è = 100 —É—Å–ª–æ–≤–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü)
    total_time = sum(data["total_percentage"] for _, data in analysis_results.items())
    
    for topic, data in sorted_topics:
        time_share = (data["total_percentage"] / total_time) * 100
        
        # –í–∏–∑—É–∞–ª—å–Ω–∞—è —à–∫–∞–ª–∞
        bar_length = int(time_share / 5)  # 20 —Å–∏–º–≤–æ–ª–æ–≤ –º–∞–∫—Å
        bar = "‚ñà" * bar_length + "‚ñë" * (20 - bar_length)
        
        print(f"üìà {topic}")
        print(f"   {bar} {time_share:.1f}% –≤–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏")
        print(f"   üìä –û–±—Å—É–∂–¥–∞–µ—Ç—Å—è –≤ {data['parts_found']} –ø–µ—Ä–∏–æ–¥–∞—Ö")
        print()

def version_3_activity_score():
    """–í–∞—Ä–∏–∞–Ω—Ç 3: –ë–∞–ª–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    print("üèÜ –í–ê–†–ò–ê–ù–¢ 3: –†–ï–ô–¢–ò–ù–ì –ê–ö–¢–ò–í–ù–û–°–¢–ò –¢–ï–ú")
    print("=" * 50)
    
    sorted_topics = sorted(analysis_results.items(), key=lambda x: x[1]["total_percentage"], reverse=True)
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–ª–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É (–º–∞–∫—Å 100 –±–∞–ª–ª–æ–≤)
    max_total = max(data["total_percentage"] for _, data in analysis_results.items())
    
    for i, (topic, data) in enumerate(sorted_topics, 1):
        activity_score = (data["total_percentage"] / max_total) * 100
        
        # –ú–µ–¥–∞–ª–∏ –∏ –∑–≤–µ–∑–¥—ã
        if i == 1:
            medal = "ü•á"
        elif i == 2:
            medal = "ü•à"
        elif i == 3:
            medal = "ü•â"
        else:
            medal = f"#{i}"
            
        # –ó–≤–µ–∑–¥—ã –ø–æ –±–∞–ª–ª–∞–º
        if activity_score >= 80:
            stars = "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê"
        elif activity_score >= 60:
            stars = "‚≠ê‚≠ê‚≠ê‚≠ê"
        elif activity_score >= 40:
            stars = "‚≠ê‚≠ê‚≠ê"
        elif activity_score >= 20:
            stars = "‚≠ê‚≠ê"
        else:
            stars = "‚≠ê"
        
        print(f"{medal} {topic}")
        print(f"   {stars} –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {activity_score:.0f}/100 –±–∞–ª–ª–æ–≤")
        print(f"   üîÑ –£–ø–æ–º–∏–Ω–∞–µ—Ç—Å—è {data['parts_found']} —Ä–∞–∑")
        print()

def version_4_simple_ranking():
    """–í–∞—Ä–∏–∞–Ω—Ç 4: –ü—Ä–æ—Å—Ç–æ–π –ø–æ–Ω—è—Ç–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥"""
    print("üéØ –í–ê–†–ò–ê–ù–¢ 4: –ü–†–û–°–¢–û–ô –†–ï–ô–¢–ò–ù–ì –í–ê–ñ–ù–û–°–¢–ò")
    print("=" * 50)
    
    sorted_topics = sorted(analysis_results.items(), key=lambda x: x[1]["total_percentage"], reverse=True)
    
    for i, (topic, data) in enumerate(sorted_topics, 1):
        frequency = data["parts_found"]
        
        # –ü—Ä–æ—Å—Ç–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∂–Ω–æ—Å—Ç–∏
        if frequency >= 10:
            importance = "–û–ß–ï–ù–¨ –í–ê–ñ–ù–ê–Ø"
            emoji = "üî•"
        elif frequency >= 5:
            importance = "–í–ê–ñ–ù–ê–Ø"
            emoji = "‚ö°"
        elif frequency >= 3:
            importance = "–ó–ù–ê–ß–ò–ú–ê–Ø"
            emoji = "‚ú®"
        else:
            importance = "–ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø"
            emoji = "üí°"
        
        print(f"{i}. {emoji} {topic}")
        print(f"   üìå –°—Ç–∞—Ç—É—Å: {importance} —Ç–µ–º–∞")
        print(f"   üìä –û–±—Å—É–∂–¥–∞–µ—Ç—Å—è –≤ {frequency} –∏–∑ 15 –ø–µ—Ä–∏–æ–¥–æ–≤ ({frequency/15*100:.0f}% –≤—Ä–µ–º–µ–Ω–∏)")
        print(f"   üíØ –ì–ª—É–±–∏–Ω–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è: {data['average_percentage']:.1f}%")
        print()

def version_5_visual_dashboard():
    """–í–∞—Ä–∏–∞–Ω—Ç 5: –í–∏–∑—É–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å"""
    print("üìä –í–ê–†–ò–ê–ù–¢ 5: –í–ò–ó–£–ê–õ–¨–ù–ê–Ø –ü–ê–ù–ï–õ–¨")
    print("=" * 60)
    
    sorted_topics = sorted(analysis_results.items(), key=lambda x: x[1]["total_percentage"], reverse=True)
    
    print("üèÜ –í–ê–® –ü–†–û–§–ò–õ–¨ –ò–ù–¢–ï–†–ï–°–û–í:")
    print("-" * 60)
    
    for topic, data in sorted_topics:
        frequency = data["parts_found"]
        intensity = data["average_percentage"]
        
        # –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        freq_bar = "‚óè" * frequency + "‚óã" * (15 - frequency)
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ —á–∞—Å—Ç–æ—Ç–µ
        if frequency >= 8:
            category = "–û–°–ù–û–í–ù–û–ô –ò–ù–¢–ï–†–ï–°"
            color = "üî¥"
        elif frequency >= 4:
            category = "–†–ï–ì–£–õ–Ø–†–ù–ê–Ø –¢–ï–ú–ê"
            color = "üü°"
        else:
            category = "–≠–ü–ò–ó–û–î–ò–ß–ï–°–ö–ò–ô"
            color = "üü¢"
        
        print(f"{color} {topic}")
        print(f"   üìà {category}")
        print(f"   üìä –ß–∞—Å—Ç–æ—Ç–∞: {freq_bar} ({frequency}/15)")
        print(f"   ‚ö° –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {intensity:.1f}% –ø—Ä–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏–∏")
        print()

if __name__ == "__main__":
    print("üé® –¢–ï–°–¢–ò–†–£–ï–ú –í–ê–†–ò–ê–ù–¢–´ –ü–†–ï–î–°–¢–ê–í–õ–ï–ù–ò–Ø –ö–õ–ò–ï–ù–¢–£")
    print("=" * 60)
    print()
    
    version_1_frequency_mentions()
    print("\n" + "="*60 + "\n")
    
    version_2_time_investment() 
    print("\n" + "="*60 + "\n")
    
    version_3_activity_score()
    print("\n" + "="*60 + "\n")
    
    version_4_simple_ranking()
    print("\n" + "="*60 + "\n")
    
    version_5_visual_dashboard()
    
    print("\n" + "="*60)
    print("ü§î –ö–ê–ö–û–ô –í–ê–†–ò–ê–ù–¢ –ü–û–ù–Ø–¢–ù–ï–ï –î–õ–Ø –ö–õ–ò–ï–ù–¢–ê?")
    print("="*60) 