#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ —Ñ–æ—Ä–º–∞—Ç–∞
"""

from chatgpt_analyzer import ChatGPTAnalyzer
import os

def test_clear_format():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–Ω—è—Ç–Ω—ã–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ —Ñ–æ—Ä–º–∞—Ç"""
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_topics_data = {
        "topics": [
            {
                "name": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –æ—Ç–¥—ã—Ö",
                "keywords": ["–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–æ—Ç–ø—É—Å–∫", "–æ—Ç–µ–ª—å"],
                "percentage": 28.5,
                "sentiment": "positive",
                "description": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫, –≤—ã–±–æ—Ä –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –æ–±–º–µ–Ω –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö"
            },
            {
                "name": "–†–∞–±–æ—Ç–∞ –∏ –∫–∞—Ä—å–µ—Ä–∞",
                "keywords": ["—Ä–∞–±–æ—Ç–∞", "–ø—Ä–æ–µ–∫—Ç", "–∑–∞—Ä–ø–ª–∞—Ç–∞"],
                "percentage": 22.1,
                "sentiment": "neutral",
                "description": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è"
            },
            {
                "name": "–ó–¥–æ—Ä–æ–≤—å–µ –∏ —Å–ø–æ—Ä—Ç",
                "keywords": ["—Å–ø–æ—Ä—Ç", "–∑–¥–æ—Ä–æ–≤—å–µ", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"],
                "percentage": 18.3,
                "sentiment": "positive",
                "description": "–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ —Ñ–∏—Ç–Ω–µ—Å–µ, –∑–¥–æ—Ä–æ–≤–æ–º –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏ –∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö"
            },
            {
                "name": "–°–µ–º—å—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
                "keywords": ["—Å–µ–º—å—è", "–¥–µ—Ç–∏", "–æ—Ç–Ω–æ—à–µ–Ω–∏—è"],
                "percentage": 15.7,
                "sentiment": "positive",
                "description": "–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Å–µ–º–µ–π–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –≤–æ—Å–ø–∏—Ç–∞–Ω–∏—è –¥–µ—Ç–µ–π –∏ –ª–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π"
            },
            {
                "name": "–•–æ–±–±–∏ –∏ —É–≤–ª–µ—á–µ–Ω–∏—è",
                "keywords": ["—Ö–æ–±–±–∏", "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–º—É–∑—ã–∫–∞"],
                "percentage": 15.4,
                "sentiment": "positive",
                "description": "–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –∑–∞–Ω—è—Ç–∏—è—Ö, —É–≤–ª–µ—á–µ–Ω–∏—è—Ö –∏ –¥–æ—Å—É–≥–µ"
            }
        ]
    }
    
    # –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
    test_commercial_assessment = {
        "commercial_assessment": [
            {
                "topic": "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –æ—Ç–¥—ã—Ö",
                "commercial_score": "–í—ã—Å–æ–∫–∏–π –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª",
                "products": [
                    {
                        "name": "–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π",
                        "description": "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–µ–∑–¥–æ–∫",
                        "revenue_potential": "–≤—ã—Å–æ–∫–∏–π"
                    }
                ]
            }
        ]
    }
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    try:
        analyzer = ChatGPTAnalyzer(api_key="test_key")
    except:
        analyzer = ChatGPTAnalyzer.__new__(ChatGPTAnalyzer)
        analyzer.output_dir = "data/reports"
        os.makedirs(analyzer.output_dir, exist_ok=True)
    
    print("üìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ù–Ø–¢–ù–û–ì–û –î–õ–Ø –ö–õ–ò–ï–ù–¢–ê –§–û–†–ú–ê–¢–ê")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–Ω—è—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    beautiful_topics = analyzer.generate_beautiful_topic_format(test_topics_data)
    print(beautiful_topics)
    
    print("\n" + "=" * 60)
    
    # –ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç
    beautiful_report = analyzer.generate_beautiful_client_report(
        test_topics_data, 
        test_commercial_assessment, 
        "–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞"
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    report_path = os.path.join(analyzer.output_dir, "–î–ï–ú–û_–ø–æ–Ω—è—Ç–Ω—ã–π_–æ—Ç—á–µ—Ç.md")
    with open(report_path, 'w', encoding='utf-8') as f:
        f.write(beautiful_report)
    
    print(f"üíæ –î–µ–º–æ –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {report_path}")
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_clear_format() 